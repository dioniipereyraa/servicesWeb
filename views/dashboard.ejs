<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PPGarage - Gestión</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .card-header {
            background: linear-gradient(45deg, #007bff, #6610f2);
            color: white;
        }
        .stats-card {
            border-left: 4px solid;
        }
        .gastos-card { border-left-color: #dc3545; }
        .ingresos-card { border-left-color: #28a745; }
        .balance-card { border-left-color: #17a2b8; }
        
        /* Estilos para el menú */
        .nav-pills .nav-link.active {
            background: linear-gradient(45deg, #007bff, #6610f2);
        }
        
        .tab-content {
            min-height: 400px;
        }
        
        .producto-terminado {
            text-decoration: line-through;
            opacity: 0.6;
            background-color: #f8f9fa;
        }
    </style>
</head>
<body class="bg-light">
    <nav class="navbar navbar-dark bg-primary">
        <div class="container">
            <span class="navbar-brand mb-0 h1">
                <i class="bi bi-tools"></i> PPGarage - Gestión de Gastos e Ingresos
            </span>
        </div>
    </nav>

    <div class="container mt-4">

        <!-- Estadísticas -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card stats-card gastos-card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <p class="card-text text-muted">Total Gastos</p>
                                <h4 class="text-danger">$<%= (parseFloat(totalGastos) + parseFloat(totalMaquinas)).toLocaleString() %></h4>
                            </div>
                            <div class="align-self-center">
                                <i class="bi bi-arrow-down-circle text-danger" style="font-size: 2rem;"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card stats-card ingresos-card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <p class="card-text text-muted">Total Ingresos</p>
                                <h4 class="text-success">$<%= totalIngresos.toLocaleString() %></h4>
                            </div>
                            <div class="align-self-center">
                                <i class="bi bi-arrow-up-circle text-success" style="font-size: 2rem;"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card stats-card balance-card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <p class="card-text text-muted">Balance</p>
                                <h4 class="<%= (totalIngresos - totalGastos) >= 0 ? 'text-success' : 'text-danger' %>">
                                    $<%= (totalIngresos - (parseFloat(totalGastos) + parseFloat(totalMaquinas))).toLocaleString() %>
                                </h4>
                            </div>
                            <div class="align-self-center">
                                <i class="bi bi-calculator text-info" style="font-size: 2rem;"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Menú de Navegación -->
        <div class="row mb-4">
            <div class="col-12">
                <ul class="nav nav-pills justify-content-center" id="mainTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="dashboard-tab" data-bs-toggle="pill" data-bs-target="#dashboard" type="button" role="tab">
                            <i class="bi bi-speedometer2"></i> Dashboard
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="maquinas-tab" data-bs-toggle="pill" data-bs-target="#maquinas" type="button" role="tab">
                            <i class="bi bi-gear"></i> Máquinas
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="recordatorios-tab" data-bs-toggle="pill" data-bs-target="#recordatorios" type="button" role="tab">
                            <i class="bi bi-bell"></i> Recordatorios
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="calculo-tab" data-bs-toggle="pill" data-bs-target="#calculo" type="button" role="tab">
                            <i class="bi bi-calculator"></i> Cálculo y Rendimiento
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="estadisticas-tab" data-bs-toggle="pill" data-bs-target="#estadisticas" type="button" role="tab">
                            <i class="bi bi-graph-up"></i> Estadísticas
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="configuracion-tab" data-bs-toggle="pill" data-bs-target="#configuracion" type="button" role="tab">
                            <i class="bi bi-gear-fill"></i> Configuración
                        </button>
                    </li>
                </ul>
            </div>
        </div>

        <!-- Contenido de las pestañas -->
        <div class="tab-content" id="mainTabsContent">
            <!-- Pestaña Dashboard -->
            <div class="tab-pane fade show active" id="dashboard" role="tabpanel">

        <div class="row">
            <!-- Formulario para agregar gastos -->
            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="bi bi-plus-circle"></i> Agregar Gasto</h5>
                    </div>
                    <div class="card-body">
                        <form action="/agregar-gasto" method="POST">
                            <div class="mb-3">
                                <label for="descripcion" class="form-label">Descripción</label>
                                <input type="text" class="form-control" id="descripcion" name="descripcion" required>
                            </div>
                            <div class="mb-3">
                                <label for="monto" class="form-label">Monto</label>
                                <input type="number" class="form-control" id="monto" name="monto" required>
                            </div>
                            <div class="mb-3">
                                <label for="cantidadEnLts" class="form-label">Cantidad en Litros</label>
                                <input type="number" class="form-control" id="cantidadEnLts" name="cantidadEnLts" min="0.1" step="0.1" placeholder="Ej: 2.5" required>
                                <div class="form-text">Puedes usar decimales (ej: 0.5, 1.5, 2.0)</div>
                            </div>
                            <div class="mb-3">
                                <label for="fecha" class="form-label">Fecha</label>
                                <input type="date" class="form-control" id="fecha" name="fecha" required>
                            </div>
                            <button type="submit" class="btn btn-danger w-100">Agregar Gasto</button>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Formulario para agregar clientes -->
            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="bi bi-person-plus"></i> Agregar Cliente</h5>
                    </div>
                    <div class="card-body">
                        <form action="/agregar-cliente" method="POST">
                            <div class="mb-3">
                                <label for="nombre" class="form-label">Nombre</label>
                                <input type="text" class="form-control" id="nombre" name="nombre" required>
                            </div>
                            <div class="mb-3">
                                <label for="servicio" class="form-label">Servicio</label>
                                <input type="text" class="form-control" id="servicio" name="servicio" required>
                            </div>
                            <div class="mb-3">
                                <label for="montoCobrado" class="form-label">Monto Cobrado</label>
                                <input type="number" class="form-control" id="montoCobrado" name="montoCobrado" required>
                            </div>
                            <div class="mb-3">
                                <label for="tipoTratamiento" class="form-label">Tipo de Tratamiento</label>
                                <select class="form-select" id="tipoTratamiento" name="tipo_tratamiento">
                                    <option value="basico">Básico</option>
                                    <option value="encerado">Encerado</option>
                                    <option value="sellado">Sellado</option>
                                    <option value="premium">Premium</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="fechaUltimoTratamiento" class="form-label">Fecha del Último Tratamiento (opcional)</label>
                                <input type="date" class="form-control" id="fechaUltimoTratamiento" name="fecha_ultimo_tratamiento">
                            </div>
                            <div class="mb-3">
                                <label for="frecuenciaRecomendada" class="form-label">Frecuencia Recomendada (días)</label>
                                <select class="form-select" id="frecuenciaRecomendada" name="frecuencia_recomendada">
                                    <option value="14">14 días (Sellado Premium)</option>
                                    <option value="21">21 días (Encerado)</option>
                                    <option value="30" selected>30 días (Estándar)</option>
                                    <option value="45">45 días (Básico)</option>
                                    <option value="60">60 días (Mantenimiento)</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="notasTratamiento" class="form-label">Notas del Tratamiento (opcional)</label>
                                <textarea class="form-control" id="notasTratamiento" name="notas_tratamiento" rows="2" placeholder="Ej: Cliente prefiere ceras sintéticas, alérgico a ciertos productos..."></textarea>
                            </div>
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-success">
                                    <i class="bi bi-person-plus"></i> Agregar Cliente
                                </button>
                                <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#modalPresupuesto">
                                    <i class="bi bi-file-earmark-pdf"></i> Generar Presupuesto PDF
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filtros y Controles -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="bi bi-funnel"></i> Filtros y Ordenamiento</h5>
                    </div>
                    <div class="card-body">
                        <form method="GET" class="row g-3">
                            <div class="col-md-3">
                                <label for="fechaDesde" class="form-label">Fecha Desde</label>
                                <input type="date" class="form-control" id="fechaDesde" name="fechaDesde" value="<%= filtros?.fechaDesde || '' %>">
                            </div>
                            <div class="col-md-3">
                                <label for="fechaHasta" class="form-label">Fecha Hasta</label>
                                <input type="date" class="form-control" id="fechaHasta" name="fechaHasta" value="<%= filtros?.fechaHasta || '' %>">
                            </div>
                            <div class="col-md-2">
                                <label for="ordenGastos" class="form-label">Ordenar Gastos por:</label>
                                <select class="form-select" id="ordenGastos" name="ordenGastos">
                                    <option value="" <%= !filtros?.ordenGastos ? 'selected' : '' %>>Por Fecha</option>
                                    <option value="monto_desc" <%= filtros?.ordenGastos === 'monto_desc' ? 'selected' : '' %>>Monto: mayor a menor</option>
                                    <option value="monto_asc" <%= filtros?.ordenGastos === 'monto_asc' ? 'selected' : '' %>>Monto: menor a mayor</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <label for="ordenClientes" class="form-label">Ordenar Clientes por:</label>
                                <select class="form-select" id="ordenClientes" name="ordenClientes">
                                    <option value="" <%= !filtros?.ordenClientes ? 'selected' : '' %>>Por Fecha</option>
                                    <option value="monto_desc" <%= filtros?.ordenClientes === 'monto_desc' ? 'selected' : '' %>>Monto: mayor a menor</option>
                                    <option value="monto_asc" <%= filtros?.ordenClientes === 'monto_asc' ? 'selected' : '' %>>Monto: menor a mayor</option>
                                </select>
                            </div>
                            <div class="col-md-2 d-flex align-items-end">
                                <button type="submit" class="btn btn-primary me-2">
                                    <i class="bi bi-search"></i> Filtrar
                                </button>
                                <a href="/" class="btn btn-outline-secondary">
                                    <i class="bi bi-arrow-clockwise"></i>
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- Lista de gastos -->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0"><i class="bi bi-list-ul"></i> Gastos Recientes</h5>
                        <span class="badge bg-danger"><%= gastos.length %> registros</span>
                    </div>
                    <div class="card-body">
                        <% if (gastos.length > 0) { %>
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Descripción</th>
                                            <th>Monto</th>
                                            <th>Litros</th>
                                            <th>Fecha</th>
                                            <th>Acción</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% gastos.forEach(gasto => { %>
                                        <tr>
                                            <td><%= gasto.descripcion %></td>
                                            <td>$<%= gasto.monto.toLocaleString() %></td>
                                            <td><%= gasto.cantidadEnLts %></td>
                                            <td><%= gasto.fecha.toISOString().split('T')[0] %></td>
                                            <td>
                                                <button class="btn btn-sm btn-outline-danger" data-action="eliminar-gasto" data-id="<%= gasto.id %>">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                        <% }) %>
                                    </tbody>
                                </table>
                            </div>
                        <% } else { %>
                            <p class="text-muted">No hay gastos registrados</p>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Lista de clientes -->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0"><i class="bi bi-people"></i> Clientes Recientes</h5>
                        <span class="badge bg-success"><%= clientes.length %> registros</span>
                    </div>
                    <div class="card-body">
                        <% if (clientes.length > 0) { %>
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Nombre</th>
                                            <th>Servicio</th>
                                            <th>Monto</th>
                                            <th>Acción</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% clientes.forEach(cliente => { %>
                                        <tr>
                                            <td><%= cliente.nombre %></td>
                                            <td><%= cliente.servicio %></td>
                                            <td>$<%= cliente.montoCobrado.toLocaleString() %></td>
                                            <td>
                                                <button class="btn btn-sm btn-outline-danger" data-action="eliminar-cliente" data-id="<%= cliente.id %>">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                        <% }) %>
                                    </tbody>
                                </table>
                            </div>
                        <% } else { %>
                            <p class="text-muted">No hay clientes registrados</p>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
            </div> <!-- Fin pestaña Dashboard -->

            <!-- Pestaña Máquinas -->
            <div class="tab-pane fade" id="maquinas" role="tabpanel">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="bi bi-gear-fill"></i> Agregar Máquina
                                </h5>
                            </div>
                            <div class="card-body">
                                <form id="maquinaForm">
                                    <div class="row">
                                        <div class="col-md-12 mb-3">
                                            <label for="nombreMaquina" class="form-label">Nombre/Tipo de Máquina</label>
                                            <input type="text" class="form-control" id="nombreMaquina" required>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label for="marcaMaquina" class="form-label">Marca</label>
                                            <input type="text" class="form-control" id="marcaMaquina">
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="modeloMaquina" class="form-label">Modelo</label>
                                            <input type="text" class="form-control" id="modeloMaquina">
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label for="precioMaquina" class="form-label">Precio</label>
                                            <input type="number" class="form-control" id="precioMaquina" step="0.01" min="0" required>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="fechaCompraMaquina" class="form-label">Fecha de Compra</label>
                                            <input type="date" class="form-control" id="fechaCompraMaquina" required>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label for="garantiaMaquina" class="form-label">Garantía (meses)</label>
                                            <input type="number" class="form-control" id="garantiaMaquina" min="0">
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="estadoMaquina" class="form-label">Estado</label>
                                            <select class="form-select" id="estadoMaquina">
                                                <option value="nueva">Nueva</option>
                                                <option value="usada">Usada</option>
                                                <option value="mantenimiento">En Mantenimiento</option>
                                                <option value="averiada">Averiada</option>
                                                <option value="vendida">Vendida</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="observacionesMaquina" class="form-label">Observaciones</label>
                                        <textarea class="form-control" id="observacionesMaquina" rows="3"></textarea>
                                    </div>
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-plus-circle"></i> Agregar Máquina
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="bi bi-list-ul"></i> Lista de Máquinas
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover">
                                        <thead>
                                            <tr>
                                                <th>Nombre</th>
                                                <th>Marca/Modelo</th>
                                                <th>Precio</th>
                                                <th>Estado</th>
                                                <th>Acciones</th>
                                            </tr>
                                        </thead>
                                        <tbody id="maquinasTableBody">
                                            <% if (typeof maquinas !== 'undefined' && maquinas.length > 0) { %>
                                                <% maquinas.forEach(maquina => { %>
                                                    <tr>
                                                        <td><%= maquina.nombre %></td>
                                                        <td><%= maquina.marca %> <%= maquina.modelo %></td>
                                                        <td>$<%= parseFloat(maquina.precio).toFixed(2) %></td>
                                                        <td>
                                                            <span class="badge bg-<%= 
                                                                maquina.estado === 'nueva' ? 'success' :
                                                                maquina.estado === 'usada' ? 'primary' :
                                                                maquina.estado === 'mantenimiento' ? 'warning' :
                                                                maquina.estado === 'averiada' ? 'danger' : 'secondary'
                                                            %>"><%= maquina.estado %></span>
                                                        </td>
                                                        <td>
                                                            <button class="btn btn-danger btn-sm" data-action="eliminar-maquina" data-id="<%= maquina.id %>">
                                                                <i class="bi bi-trash"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                <% }) %>
                                            <% } else { %>
                                                <tr>
                                                    <td colspan="5" class="text-center text-muted">No hay máquinas registradas</td>
                                                </tr>
                                            <% } %>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div> <!-- Fin pestaña Máquinas -->

            <!-- Pestaña Recordatorios -->
            <div class="tab-pane fade" id="recordatorios" role="tabpanel">
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="bi bi-bell-fill"></i> Recordatorios de Tratamientos
                                </h5>
                            </div>
                            <div class="card-body">
                                <!-- Estadísticas de recordatorios -->
                                <div class="row mb-4">
                                    <div class="col-md-3">
                                        <div class="card bg-danger text-white">
                                            <div class="card-body text-center">
                                                <h6 class="card-title">Vencidos</h6>
                                                <% 
                                                    const hoy = new Date();
                                                    const clientesVencidos = clientes.filter(cliente => {
                                                        if (!cliente.fecha_ultimo_tratamiento) return false;
                                                        const ultimoTratamiento = new Date(cliente.fecha_ultimo_tratamiento);
                                                        const diasPasados = Math.floor((hoy - ultimoTratamiento) / (1000 * 60 * 60 * 24));
                                                        return diasPasados > (cliente.frecuencia_recomendada || 30);
                                                    });
                                                %>
                                                <h4><%= clientesVencidos.length %></h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="card bg-warning text-dark">
                                            <div class="card-body text-center">
                                                <h6 class="card-title">Esta Semana</h6>
                                                <% 
                                                    const clientesEstaSemana = clientes.filter(cliente => {
                                                        if (!cliente.fecha_ultimo_tratamiento) return false;
                                                        const ultimoTratamiento = new Date(cliente.fecha_ultimo_tratamiento);
                                                        const diasPasados = Math.floor((hoy - ultimoTratamiento) / (1000 * 60 * 60 * 24));
                                                        const frecuencia = cliente.frecuencia_recomendada || 30;
                                                        return diasPasados >= (frecuencia - 7) && diasPasados <= frecuencia;
                                                    });
                                                %>
                                                <h4><%= clientesEstaSemana.length %></h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="card bg-info text-white">
                                            <div class="card-body text-center">
                                                <h6 class="card-title">Próximos 15 días</h6>
                                                <% 
                                                    const clientesProximos = clientes.filter(cliente => {
                                                        if (!cliente.fecha_ultimo_tratamiento) return false;
                                                        const ultimoTratamiento = new Date(cliente.fecha_ultimo_tratamiento);
                                                        const diasPasados = Math.floor((hoy - ultimoTratamiento) / (1000 * 60 * 60 * 24));
                                                        const frecuencia = cliente.frecuencia_recomendada || 30;
                                                        return diasPasados >= (frecuencia - 15) && diasPasados < (frecuencia - 7);
                                                    });
                                                %>
                                                <h4><%= clientesProximos.length %></h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="card bg-success text-white">
                                            <div class="card-body text-center">
                                                <h6 class="card-title">Al día</h6>
                                                <% 
                                                    const clientesAlDia = clientes.filter(cliente => {
                                                        if (!cliente.fecha_ultimo_tratamiento) return true;
                                                        const ultimoTratamiento = new Date(cliente.fecha_ultimo_tratamiento);
                                                        const diasPasados = Math.floor((hoy - ultimoTratamiento) / (1000 * 60 * 60 * 24));
                                                        const frecuencia = cliente.frecuencia_recomendada || 30;
                                                        return diasPasados < (frecuencia - 15);
                                                    });
                                                %>
                                                <h4><%= clientesAlDia.length %></h4>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Tabla de recordatorios -->
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover">
                                        <thead class="table-dark">
                                            <tr>
                                                <th>Cliente</th>
                                                <th>Tratamiento</th>
                                                <th>Último Servicio</th>
                                                <th>Días Transcurridos</th>
                                                <th>Estado</th>
                                                <th>Próxima Cita</th>
                                                <th>Acciones</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% 
                                                // Ordenar clientes por prioridad (vencidos primero)
                                                const clientesOrdenados = clientes
                                                    .filter(cliente => cliente.fecha_ultimo_tratamiento)
                                                    .sort((a, b) => {
                                                        const fechaA = new Date(a.fecha_ultimo_tratamiento);
                                                        const fechaB = new Date(b.fecha_ultimo_tratamiento);
                                                        const diasA = Math.floor((hoy - fechaA) / (1000 * 60 * 60 * 24));
                                                        const diasB = Math.floor((hoy - fechaB) / (1000 * 60 * 60 * 24));
                                                        return diasB - diasA; // Más días primero (vencidos)
                                                    });
                                            %>
                                            <% clientesOrdenados.forEach(cliente => { 
                                                const ultimoTratamiento = new Date(cliente.fecha_ultimo_tratamiento);
                                                const diasPasados = Math.floor((hoy - ultimoTratamiento) / (1000 * 60 * 60 * 24));
                                                const frecuencia = cliente.frecuencia_recomendada || 30;
                                                
                                                let estado, badgeClass;
                                                if (diasPasados > frecuencia) {
                                                    estado = 'Vencido';
                                                    badgeClass = 'bg-danger';
                                                } else if (diasPasados >= (frecuencia - 7)) {
                                                    estado = 'Esta semana';
                                                    badgeClass = 'bg-warning text-dark';
                                                } else if (diasPasados >= (frecuencia - 15)) {
                                                    estado = 'Próximamente';
                                                    badgeClass = 'bg-info';
                                                } else {
                                                    estado = 'Al día';
                                                    badgeClass = 'bg-success';
                                                }
                                                
                                                const proximaCita = new Date(ultimoTratamiento);
                                                proximaCita.setDate(proximaCita.getDate() + frecuencia);
                                            %> 
                                                <tr class="<%= diasPasados > frecuencia ? 'table-danger' : diasPasados >= (frecuencia - 7) ? 'table-warning' : '' %>">
                                                    <td><strong><%= cliente.nombre %></strong></td>
                                                    <td>
                                                        <span class="badge bg-<%= 
                                                            cliente.tipo_tratamiento === 'premium' ? 'warning' :
                                                            cliente.tipo_tratamiento === 'sellado' ? 'info' :
                                                            cliente.tipo_tratamiento === 'encerado' ? 'primary' : 'secondary'
                                                        %>"><%= cliente.tipo_tratamiento %></span>
                                                    </td>
                                                    <td><%= ultimoTratamiento.toLocaleDateString() %></td>
                                                    <td>
                                                        <span class="<%= diasPasados > frecuencia ? 'text-danger fw-bold' : '' %>">
                                                            <%= diasPasados %> días
                                                        </span>
                                                    </td>
                                                    <td>
                                                        <span class="badge <%= badgeClass %>"><%= estado %></span>
                                                    </td>
                                                    <td>
                                                        <small class="<%= diasPasados > frecuencia ? 'text-danger' : 'text-muted' %>">
                                                            <%= proximaCita.toLocaleDateString() %>
                                                        </small>
                                                    </td>
                                                    <td>
                                                        <button class="btn btn-success btn-sm" data-action="marcar-realizado" data-id="<%= cliente.id %>" title="Marcar como realizado">
                                                            <i class="bi bi-check-circle"></i>
                                                        </button>
                                                        <button class="btn btn-outline-primary btn-sm" data-action="reagendar" data-id="<%= cliente.id %>" title="Reagendar">
                                                            <i class="bi bi-calendar-plus"></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                            <% }) %>
                                            <% if (clientesOrdenados.length === 0) { %>
                                                <tr>
                                                    <td colspan="7" class="text-center text-muted py-4">
                                                        <i class="bi bi-bell" style="font-size: 2rem;"></i>
                                                        <p class="mt-2">No hay clientes con historial de tratamientos</p>
                                                        <small>Agrega la fecha del último tratamiento en la información del cliente</small>
                                                    </td>
                                                </tr>
                                            <% } %>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div> <!-- Fin pestaña Recordatorios -->

            <!-- Pestaña Cálculo y Rendimiento -->
            <div class="tab-pane fade" id="calculo" role="tabpanel">
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0"><i class="bi bi-calculator"></i> Gestión de Productos y Rendimiento</h5>
                            </div>
                            <div class="card-body">
                                <p class="mb-4">Aquí puedes dar de baja productos terminados y calcular su rendimiento por lavado.</p>
                                
                                <!-- Lista de productos activos -->
                                <h6><i class="bi bi-box"></i> Productos Activos</h6>
                                <div class="table-responsive mb-4">
                                    <table class="table table-hover">
                                        <thead class="table-light">
                                            <tr>
                                                <th>Producto</th>
                                                <th>Monto</th>
                                                <th>Litros</th>
                                                <th>Fecha Compra</th>
                                                <th>Estado</th>
                                                <th>Acción</th>
                                            </tr>
                                        </thead>
                                        <tbody id="productosActivos">
                                            <% gastos.forEach(gasto => { %>
                                            <tr id="gasto-<%= gasto.id %>" class="<%= gasto.estado === 'terminado' ? 'producto-terminado' : '' %>">
                                                <td><%= gasto.descripcion %></td>
                                                <td>$<%= gasto.monto.toLocaleString() %></td>
                                                <td><%= gasto.cantidadEnLts %></td>
                                                <td><%= gasto.fecha.toISOString().split('T')[0] %></td>
                                                <td>
                                                    <% if (gasto.estado === 'terminado') { %>
                                                        <span class="badge bg-secondary">Terminado</span>
                                                    <% } else { %>
                                                        <span class="badge bg-success">Activo</span>
                                                    <% } %>
                                                </td>
                                                <td>
                                                    <% if (gasto.estado !== 'terminado') { %>
                                                        <button class="btn btn-sm btn-warning" data-action="dar-baja" data-id="<%= gasto.id %>" data-bs-toggle="modal" data-bs-target="#modalDarBaja">
                                                            <i class="bi bi-check-circle"></i> Dar de Baja
                                                        </button>
                                                    <% } %>
                                                </td>
                                            </tr>
                                            <% }) %>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Pestaña Estadísticas -->
            <div class="tab-pane fade" id="estadisticas" role="tabpanel">
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5 class="mb-0"><i class="bi bi-graph-up"></i> Productos Terminados y Rendimientos</h5>
                                <span class="badge bg-info"><%= productosTerminados.length %> productos</span>
                            </div>
                            <div class="card-body">
                                <% if (productosTerminados.length > 0) { %>
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <thead class="table-dark">
                                                <tr>
                                                    <th>Producto</th>
                                                    <th>Monto Invertido</th>
                                                    <th>Lavados Realizados</th>
                                                    <th>Costo por Lavado</th>
                                                    <th>Fecha Terminado</th>
                                                    <th>Observaciones</th>
                                                    <th>Rendimiento</th>
                                                    <th>Acción</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <% productosTerminados.forEach(producto => { 
                                                    const rendimiento = producto.lavados_realizados > 0 ? 
                                                        (producto.lavados_realizados >= 10 ? 'Excelente' : 
                                                         producto.lavados_realizados >= 5 ? 'Bueno' : 'Regular') : 'Sin datos';
                                                    const badgeClass = rendimiento === 'Excelente' ? 'bg-success' : 
                                                                      rendimiento === 'Bueno' ? 'bg-warning' : 
                                                                      rendimiento === 'Regular' ? 'bg-danger' : 'bg-secondary';
                                                %>
                                                <tr>
                                                    <td><strong><%= producto.descripcion %></strong></td>
                                                    <td class="text-danger">$<%= producto.monto.toLocaleString() %></td>
                                                    <td class="text-center">
                                                        <span class="badge bg-primary"><%= producto.lavados_realizados || 0 %></span>
                                                    </td>
                                                    <td class="text-success">
                                                        <strong>$<%= producto.costo_por_lavado %></strong>
                                                    </td>
                                                    <td><%= producto.fecha_baja ? new Date(producto.fecha_baja).toLocaleDateString() : '-' %></td>
                                                    <td>
                                                        <% if (producto.observaciones) { %>
                                                            <small class="text-muted"><%= producto.observaciones %></small>
                                                        <% } else { %>
                                                            <small class="text-muted">Sin observaciones</small>
                                                        <% } %>
                                                    </td>
                                                    <td>
                                                        <span class="badge <%= badgeClass %>"><%= rendimiento %></span>
                                                    </td>
                                                    <td>
                                                        <button class="btn btn-sm btn-outline-danger" data-action="eliminar-producto-terminado" data-id="<%= producto.id %>" title="Eliminar producto terminado">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                                <% }) %>
                                            </tbody>
                                        </table>
                                    </div>
                                    
                                    <!-- Resumen estadístico -->
                                    <div class="row mt-4">
                                        <div class="col-md-3">
                                            <div class="card bg-light">
                                                <div class="card-body text-center">
                                                    <h6 class="card-title">Productos Terminados</h6>
                                                    <h4 class="text-primary"><%= productosTerminados.length %></h4>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="card bg-light">
                                                <div class="card-body text-center">
                                                    <h6 class="card-title">Total Invertido</h6>
                                                    <h4 class="text-danger">$<%= productosTerminados.reduce((sum, p) => sum + p.monto, 0).toLocaleString() %></h4>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="card bg-light">
                                                <div class="card-body text-center">
                                                    <h6 class="card-title">Autos Lavados</h6>
                                                    <% 
                                                        // El número real de autos lavados es el máximo entre todos los productos
                                                        const autosLavados = productosTerminados.length > 0 ? 
                                                            Math.max(...productosTerminados.map(p => p.lavados_realizados || 0)) : 0;
                                                    %>
                                                    <h4 class="text-info"><%= autosLavados %></h4>
                                                    <small class="text-muted">Lavados reales</small>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="card bg-light">
                                                <div class="card-body text-center">
                                                    <h6 class="card-title">Costo Total por Lavado</h6>
                                                    <% 
                                                        // Calcular la SUMA de todos los costos por lavado individuales
                                                        const productosConLavados = productosTerminados.filter(p => (p.lavados_realizados || 0) > 0);
                                                        let costoTotalPorLavado = 0;
                                                        if (productosConLavados.length > 0) {
                                                            costoTotalPorLavado = productosConLavados.reduce((sum, p) => {
                                                                const costoPorLavado = p.monto / p.lavados_realizados;
                                                                return sum + costoPorLavado;
                                                            }, 0);
                                                        }
                                                    %>
                                                    <h4 class="text-success">$<%= costoTotalPorLavado.toFixed(2) %></h4>
                                                    <small class="text-muted">Suma de <%= productosConLavados.length %> productos</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                <% } else { %>
                                    <div class="text-center py-5">
                                        <i class="bi bi-graph-up" style="font-size: 3rem; color: #dee2e6;"></i>
                                        <h5 class="mt-3 text-muted">No hay productos terminados</h5>
                                        <p class="text-muted">Cuando des de baja productos, aparecerán aquí con sus estadísticas de rendimiento.</p>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Estadísticas de Máquinas -->
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5 class="mb-0"><i class="bi bi-gear-fill"></i> Inventario de Máquinas</h5>
                                <span class="badge bg-secondary"><%= maquinas.length %> máquinas</span>
                            </div>
                            <div class="card-body">
                                <% if (maquinas.length > 0) { %>
                                    <div class="row mb-4">
                                        <div class="col-md-3">
                                            <div class="card bg-light border-success">
                                                <div class="card-body text-center">
                                                    <h6 class="card-title">Total Máquinas</h6>
                                                    <h4 class="text-success"><%= maquinas.length %></h4>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="card bg-light border-danger">
                                                <div class="card-body text-center">
                                                    <h6 class="card-title">Inversión Total</h6>
                                                    <h4 class="text-danger">$<%= maquinas.reduce((sum, m) => sum + parseFloat(m.precio), 0).toLocaleString() %></h4>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="card bg-light border-warning">
                                                <div class="card-body text-center">
                                                    <h6 class="card-title">Promedio por Máquina</h6>
                                                    <h4 class="text-warning">$<%= (maquinas.reduce((sum, m) => sum + parseFloat(m.precio), 0) / maquinas.length).toFixed(2) %></h4>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="card bg-light border-info">
                                                <div class="card-body text-center">
                                                    <h6 class="card-title">Estado General</h6>
                                                    <% 
                                                        const nuevas = maquinas.filter(m => m.estado === 'nueva').length;
                                                        const usadas = maquinas.filter(m => m.estado === 'usada').length;
                                                        const mantenimiento = maquinas.filter(m => m.estado === 'mantenimiento').length;
                                                        const averiadas = maquinas.filter(m => m.estado === 'averiada').length;
                                                    %>
                                                    <div class="text-center">
                                                        <small class="d-block text-success"><%= nuevas %> nuevas</small>
                                                        <small class="d-block text-primary"><%= usadas %> usadas</small>
                                                        <small class="d-block text-warning"><%= mantenimiento %> mantenimiento</small>
                                                        <small class="d-block text-danger"><%= averiadas %> averiadas</small>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <thead class="table-dark">
                                                <tr>
                                                    <th>Nombre</th>
                                                    <th>Marca/Modelo</th>
                                                    <th>Precio</th>
                                                    <th>Fecha Compra</th>
                                                    <th>Garantía</th>
                                                    <th>Estado</th>
                                                    <th>Observaciones</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <% maquinas.forEach(maquina => { %>
                                                    <tr>
                                                        <td><strong><%= maquina.nombre %></strong></td>
                                                        <td><%= maquina.marca || '-' %> <%= maquina.modelo || '' %></td>
                                                        <td class="text-end">$<%= parseFloat(maquina.precio).toFixed(2) %></td>
                                                        <td><%= new Date(maquina.fecha_compra).toLocaleDateString() %></td>
                                                        <td>
                                                            <% if (maquina.garantia_meses) { %>
                                                                <%= maquina.garantia_meses %> meses
                                                            <% } else { %>
                                                                <span class="text-muted">Sin garantía</span>
                                                            <% } %>
                                                        </td>
                                                        <td>
                                                            <span class="badge bg-<%= 
                                                                maquina.estado === 'nueva' ? 'success' :
                                                                maquina.estado === 'usada' ? 'primary' :
                                                                maquina.estado === 'mantenimiento' ? 'warning' :
                                                                maquina.estado === 'averiada' ? 'danger' : 'secondary'
                                                            %>"><%= maquina.estado %></span>
                                                        </td>
                                                        <td class="text-muted">
                                                            <%= maquina.observaciones || '-' %>
                                                        </td>
                                                    </tr>
                                                <% }) %>
                                            </tbody>
                                        </table>
                                    </div>
                                <% } else { %>
                                    <div class="text-center py-5">
                                        <i class="bi bi-gear" style="font-size: 3rem; color: #dee2e6;"></i>
                                        <h5 class="mt-3 text-muted">No hay máquinas registradas</h5>
                                        <p class="text-muted">Ve a la pestaña Máquinas para comenzar a registrar tu equipamiento.</p>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Pestaña Configuración -->
            <div class="tab-pane fade" id="configuracion" role="tabpanel">
                <div class="row">
                    <div class="col-12">
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="bi bi-currency-dollar"></i> Configuración de Precios
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="alert alert-info">
                                    <i class="bi bi-info-circle"></i>
                                    <strong>Importante:</strong> Los cambios en los precios se aplicarán inmediatamente en los nuevos presupuestos.
                                </div>
                                
                                <div class="table-responsive">
                                    <table class="table table-striped">
                                        <thead class="table-dark">
                                            <tr>
                                                <th>Servicio</th>
                                                <th>Descripción</th>
                                                <th>Precio Actual</th>
                                                <th>Nuevo Precio</th>
                                                <th>Acciones</th>
                                            </tr>
                                        </thead>
                                        <tbody id="tablaPreciosServicios">
                                            <% if (typeof preciosServicios !== 'undefined' && preciosServicios.length > 0) { %>
                                                <% preciosServicios.forEach(servicio => { %>
                                                    <tr data-servicio-id="<%= servicio.id %>">
                                                        <td>
                                                            <strong>
                                                                <%= servicio.nombre_servicio.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase()) %>
                                                            </strong>
                                                        </td>
                                                        <td class="text-muted">
                                                            <%= servicio.descripcion || 'Sin descripción' %>
                                                        </td>
                                                        <td>
                                                            <span class="badge bg-primary fs-6">
                                                                $<%= parseFloat(servicio.precio).toLocaleString() %>
                                                            </span>
                                                        </td>
                                                        <td>
                                                            <div class="input-group input-group-sm" style="width: 150px;">
                                                                <span class="input-group-text">$</span>
                                                                <input 
                                                                    type="number" 
                                                                    class="form-control precio-input" 
                                                                    value="<%= parseFloat(servicio.precio) %>"
                                                                    min="0"
                                                                    step="100"
                                                                    data-precio-original="<%= parseFloat(servicio.precio) %>"
                                                                >
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <button 
                                                                class="btn btn-success btn-sm guardar-precio" 
                                                                data-servicio-id="<%= servicio.id %>"
                                                                style="display: none;"
                                                            >
                                                                <i class="bi bi-check-lg"></i> Guardar
                                                            </button>
                                                            <button 
                                                                class="btn btn-secondary btn-sm cancelar-precio" 
                                                                data-servicio-id="<%= servicio.id %>"
                                                                style="display: none;"
                                                            >
                                                                <i class="bi bi-x-lg"></i> Cancelar
                                                            </button>
                                                            <button 
                                                                class="btn btn-primary btn-sm editar-servicio" 
                                                                data-servicio-id="<%= servicio.id %>"
                                                                data-bs-toggle="modal" 
                                                                data-bs-target="#modalEditarServicio"
                                                                title="Editar servicio completo"
                                                            >
                                                                <i class="bi bi-pencil"></i>
                                                            </button>
                                                            <button 
                                                                class="btn btn-danger btn-sm eliminar-servicio" 
                                                                data-servicio-id="<%= servicio.id %>"
                                                                title="Eliminar servicio"
                                                            >
                                                                <i class="bi bi-trash"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                <% }) %>
                                            <% } else { %>
                                                <tr>
                                                    <td colspan="5" class="text-center text-muted py-4">
                                                        No hay servicios configurados
                                                    </td>
                                                </tr>
                                            <% } %>
                                        </tbody>
                                    </table>
                                </div>
                                
                                <!-- Botón para agregar nuevo servicio -->
                                <div class="mt-4">
                                    <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#modalNuevoServicio">
                                        <i class="bi bi-plus-circle"></i> Agregar Nuevo Servicio
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Card para configuración de PDF -->
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="bi bi-file-earmark-pdf"></i> Configuración de PDF Presupuesto
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="alert alert-warning">
                                    <i class="bi bi-exclamation-triangle"></i>
                                    <strong>Personalización:</strong> Configura aquí el contenido que aparecerá en los PDFs de presupuesto.
                                </div>
                                
                                <form id="formConfiguracionPDF">
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label for="nombreEmpresa" class="form-label">Nombre de la Empresa</label>
                                            <input type="text" class="form-control" id="nombreEmpresa" placeholder="PPGarage - Car Detailing">
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="telefonoEmpresa" class="form-label">Teléfono</label>
                                            <input type="text" class="form-control" id="telefonoEmpresa" placeholder="+54 11 1234-5678">
                                        </div>
                                    </div>
                                    
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label for="direccionEmpresa" class="form-label">Dirección</label>
                                            <input type="text" class="form-control" id="direccionEmpresa" placeholder="Tu Dirección, Ciudad">
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="emailEmpresa" class="form-label">Email</label>
                                            <input type="email" class="form-control" id="emailEmpresa" placeholder="contacto@ppgarage.com">
                                        </div>
                                    </div>
                                    
                                    <div class="row">
                                        <div class="col-md-8 mb-3">
                                            <label for="encabezadoPresupuesto" class="form-label">Título del Presupuesto</label>
                                            <input type="text" class="form-control" id="encabezadoPresupuesto" placeholder="Presupuesto de Servicios de Car Detailing">
                                        </div>
                                        <div class="col-md-4 mb-3">
                                            <label for="validezDias" class="form-label">Validez (días)</label>
                                            <input type="number" class="form-control" id="validezDias" min="1" max="90" value="15">
                                        </div>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label for="descripcionEmpresa" class="form-label">Descripción de la Empresa</label>
                                        <textarea class="form-control" id="descripcionEmpresa" rows="2" placeholder="Especialistas en cuidado automotriz con años de experiencia..."></textarea>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label for="terminosCondiciones" class="form-label">Términos y Condiciones</label>
                                        <textarea class="form-control" id="terminosCondiciones" rows="4" placeholder="• El presupuesto tiene validez por los días indicados&#10;• Los precios incluyen materiales y mano de obra&#10;• Se requiere 50% de seña para iniciar el trabajo"></textarea>
                                    </div>
                                    
                                    <div class="mb-4">
                                        <label for="piePagina" class="form-label">Pie de Página</label>
                                        <textarea class="form-control" id="piePagina" rows="2" placeholder="Gracias por confiar en PPGarage - Su vehículo en las mejores manos"></textarea>
                                    </div>
                                    
                                    <!-- Sección de Personalización Visual -->
                                    <hr class="my-4">
                                    <h6 class="text-primary mb-3">
                                        <i class="bi bi-palette"></i> Personalización Visual
                                    </h6>
                                    
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label for="colorPrimario" class="form-label">Color Principal</label>
                                            <div class="input-group">
                                                <input type="color" class="form-control form-control-color" id="colorPrimario" value="#2980b9" title="Seleccionar color principal">
                                                <input type="text" class="form-control" id="colorPrimarioText" value="#2980b9" placeholder="#2980b9">
                                            </div>
                                            <small class="form-text text-muted">Color para encabezados y elementos principales</small>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="colorSecundario" class="form-label">Color Secundario</label>
                                            <div class="input-group">
                                                <input type="color" class="form-control form-control-color" id="colorSecundario" value="#34495e" title="Seleccionar color secundario">
                                                <input type="text" class="form-control" id="colorSecundarioText" value="#34495e" placeholder="#34495e">
                                            </div>
                                            <small class="form-text text-muted">Color para texto y elementos secundarios</small>
                                        </div>
                                    </div>
                                    
                                    <div class="row">
                                        <div class="col-md-8 mb-3">
                                            <label for="logoFile" class="form-label">Logo de la Empresa</label>
                                            <div class="input-group mb-2">
                                                <input type="file" class="form-control" id="logoFile" accept="image/*">
                                                <button type="button" class="btn btn-outline-primary" id="btnSubirLogo">
                                                    <i class="bi bi-cloud-upload"></i> Subir
                                                </button>
                                            </div>
                                            <div id="logoPreview" class="mt-2" style="display: none;">
                                                <img id="logoImg" src="" alt="Logo actual" style="max-height: 60px; border: 1px solid #ddd; border-radius: 4px;">
                                                <button type="button" class="btn btn-sm btn-outline-danger ms-2" id="btnEliminarLogo">
                                                    <i class="bi bi-trash"></i> Eliminar
                                                </button>
                                            </div>
                                            <small class="form-text text-muted">Formato: PNG, JPG o GIF. Tamaño máximo: 5MB. Recomendado: 200x80px</small>
                                        </div>
                                        <div class="col-md-4 mb-3">
                                            <label class="form-label">Opciones de Logo</label>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" id="mostrarLogo">
                                                <label class="form-check-label" for="mostrarLogo">
                                                    Mostrar logo en PDF
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Vista previa de colores -->
                                    <div class="mb-3">
                                        <label class="form-label">Vista Previa de Colores</label>
                                        <div class="d-flex gap-3 align-items-center">
                                            <div class="preview-color-box" id="previewPrimario" style="width: 50px; height: 30px; background-color: #2980b9; border-radius: 4px; border: 1px solid #ddd;"></div>
                                            <span class="text-muted">Color Principal</span>
                                            <div class="preview-color-box" id="previewSecundario" style="width: 50px; height: 30px; background-color: #34495e; border-radius: 4px; border: 1px solid #ddd;"></div>
                                            <span class="text-muted">Color Secundario</span>
                                        </div>
                                    </div>
                                    
                                    <div class="d-flex gap-2">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="bi bi-save"></i> Guardar Configuración
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary" id="btnVistaPrevia">
                                            <i class="bi bi-eye"></i> Vista Previa
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div> <!-- Fin pestaña Configuración -->

        </div> <!-- Fin tab-content -->

        <!-- Modal para dar de baja producto -->
        <div class="modal fade" id="modalDarBaja" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Dar de Baja Producto</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="formDarBaja">
                            <input type="hidden" id="productoId" name="productoId">
                            <div class="mb-3">
                                <label for="lavadosRealizados" class="form-label">¿Cuántos lavados realizaste con este producto?</label>
                                <input type="number" class="form-control" id="lavadosRealizados" name="lavadosRealizados" min="1" required>
                                <div class="form-text">Esto nos ayudará a calcular el rendimiento por lavado</div>
                            </div>
                            <div class="mb-3">
                                <label for="observaciones" class="form-label">Observaciones (opcional)</label>
                                <textarea class="form-control" id="observaciones" name="observaciones" rows="3" placeholder="Ej: Se terminó exactamente, rindió bien, etc."></textarea>
                            </div>
                        </form>
                        <div id="calculoRendimiento" class="alert alert-info" style="display: none;">
                            <h6>Cálculo de Rendimiento:</h6>
                            <p id="resultadoCalculo"></p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="button" class="btn btn-warning" id="confirmarDarBaja">Dar de Baja</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal para generar presupuesto -->
        <div class="modal fade" id="modalPresupuesto" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">
                            <i class="bi bi-file-earmark-pdf"></i> Generar Presupuesto PDF
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="presupuestoForm">
                            <div class="row">
                                <div class="col-md-6">
                                    <h6>Datos del Cliente</h6>
                                    <div class="mb-3">
                                        <label for="clienteNombre" class="form-label">Nombre del Cliente</label>
                                        <input type="text" class="form-control" id="clienteNombre" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="clienteTelefono" class="form-label">Teléfono</label>
                                        <input type="tel" class="form-control" id="clienteTelefono">
                                    </div>
                                    <div class="mb-3">
                                        <label for="clienteEmail" class="form-label">Email</label>
                                        <input type="email" class="form-control" id="clienteEmail">
                                    </div>
                                    <div class="mb-3">
                                        <label for="vehiculo" class="form-label">Vehículo</label>
                                        <input type="text" class="form-control" id="vehiculo" placeholder="Ej: Toyota Corolla 2020">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <h6>Servicios</h6>
                                    <div class="mb-3" id="serviciosContainer">
                                        <!-- Los servicios se cargarán dinámicamente aquí -->
                                        <div class="text-center text-muted py-3">
                                            <i class="bi bi-hourglass-split"></i>
                                            <p class="mb-0">Cargando servicios...</p>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="servicioPersonalizado" class="form-label">Servicio Personalizado</label>
                                        <input type="text" class="form-control mb-2" id="servicioPersonalizado" placeholder="Descripción del servicio">
                                        <input type="number" class="form-control" id="precioPersonalizado" placeholder="Precio">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="descuento" class="form-label">Descuento (%)</label>
                                        <input type="number" class="form-control" id="descuento" min="0" max="100" value="0">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="validezPresupuesto" class="form-label">Validez (días)</label>
                                        <input type="number" class="form-control" id="validezPresupuesto" value="15">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div class="alert alert-info">
                                        <strong>Total: $<span id="totalPresupuesto">0</span></strong>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="button" class="btn btn-primary" id="generarPDF">
                            <i class="bi bi-download"></i> Generar y Descargar PDF
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal para agregar nuevo servicio -->
        <div class="modal fade" id="modalNuevoServicio" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">
                            <i class="bi bi-plus-circle"></i> Agregar Nuevo Servicio
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="nuevoServicioForm">
                            <div class="mb-3">
                                <label for="nombreServicio" class="form-label">Nombre del Servicio</label>
                                <input type="text" class="form-control" id="nombreServicio" required>
                                <div class="form-text">Ej: Pulido de Faros, Limpieza de Llantas, etc.</div>
                            </div>
                            <div class="mb-3">
                                <label for="precioServicio" class="form-label">Precio</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input type="number" class="form-control" id="precioServicio" min="0" step="100" required>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="descripcionServicio" class="form-label">Descripción</label>
                                <textarea class="form-control" id="descripcionServicio" rows="3" placeholder="Descripción detallada del servicio..."></textarea>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="button" class="btn btn-primary" id="guardarNuevoServicio">
                            <i class="bi bi-save"></i> Guardar Servicio
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal para editar servicio -->
        <div class="modal fade" id="modalEditarServicio" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">
                            <i class="bi bi-pencil"></i> Editar Servicio
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editarServicioForm">
                            <input type="hidden" id="editarServicioId">
                            <div class="mb-3">
                                <label for="editarNombreServicio" class="form-label">Nombre del Servicio</label>
                                <input type="text" class="form-control" id="editarNombreServicio" required>
                                <div class="form-text">Este nombre aparecerá en los presupuestos</div>
                            </div>
                            <div class="mb-3">
                                <label for="editarPrecioServicio" class="form-label">Precio</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input type="number" class="form-control" id="editarPrecioServicio" min="0" step="100" required>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="editarDescripcionServicio" class="form-label">Descripción</label>
                                <textarea class="form-control" id="editarDescripcionServicio" rows="3" placeholder="Descripción detallada del servicio..."></textarea>
                            </div>
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle"></i>
                                <strong>Nota:</strong> Los cambios se aplicarán inmediatamente en todos los presupuestos futuros.
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="button" class="btn btn-primary" id="guardarEdicionServicio">
                            <i class="bi bi-save"></i> Guardar Cambios
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.31/jspdf.plugin.autotable.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Event delegation para botones de eliminar
        document.addEventListener('click', function(e) {
            const button = e.target.closest('[data-action]');
            if (!button) return;
            
            const action = button.getAttribute('data-action');
            const id = button.getAttribute('data-id');
            
            if (action === 'eliminar-gasto') {
                eliminarGasto(id);
            } else if (action === 'eliminar-cliente') {
                eliminarCliente(id);
            } else if (action === 'eliminar-producto-terminado') {
                eliminarProductoTerminado(id);
            } else if (action === 'eliminar-maquina') {
                eliminarMaquina(id);
            } else if (action === 'marcar-realizado') {
                marcarTratamientoRealizado(id);
            } else if (action === 'reagendar') {
                reagendarTratamiento(id);
            } else if (action === 'dar-baja') {
                document.getElementById('productoId').value = id;
            }
        });

        // Manejar dar de baja producto
        document.getElementById('confirmarDarBaja').addEventListener('click', async function() {
            const productoId = document.getElementById('productoId').value;
            const lavados = document.getElementById('lavadosRealizados').value;
            const observaciones = document.getElementById('observaciones').value;
            
            if (!lavados || lavados < 1) {
                alert('Por favor ingresa un número válido de lavados');
                return;
            }
            
            try {
                const response = await fetch('/dar-baja-producto', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        id: productoId,
                        lavados_realizados: lavados,
                        observaciones: observaciones
                    })
                });
                
                if (response.ok) {
                    location.reload();
                } else {
                    alert('Error dando de baja el producto');
                }
            } catch (error) {
                alert('Error dando de baja el producto');
            }
        });

        // Calcular rendimiento en tiempo real
        document.getElementById('lavadosRealizados').addEventListener('input', function() {
            const lavados = this.value;
            if (lavados && lavados > 0) {
                // Aquí calcularemos el rendimiento cuando tengamos los datos del producto
                // Por ahora solo mostramos el div
                document.getElementById('calculoRendimiento').style.display = 'block';
                document.getElementById('resultadoCalculo').textContent = `Con ${lavados} lavados realizados, calcularemos el costo por lavado.`;
            } else {
                document.getElementById('calculoRendimiento').style.display = 'none';
            }
        });

        async function eliminarGasto(id) {
            if (confirm('¿Estás seguro de eliminar este gasto?')) {
                try {
                    const response = await fetch(`/gastos/${id}`, { method: 'DELETE' });
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error eliminando gasto');
                    }
                } catch (error) {
                    alert('Error eliminando gasto');
                }
            }
        }

        async function eliminarCliente(id) {
            if (confirm('¿Estás seguro de eliminar este cliente?')) {
                try {
                    const response = await fetch(`/clientes/${id}`, { method: 'DELETE' });
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error eliminando cliente');
                    }
                } catch (error) {
                    alert('Error eliminando cliente');
                }
            }
        }

        async function eliminarProductoTerminado(id) {
            if (confirm('¿Estás seguro de eliminar este producto terminado?')) {
                try {
                    const response = await fetch(`/productos-terminados/${id}`, { method: 'DELETE' });
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error eliminando producto terminado');
                    }
                } catch (error) {
                    alert('Error eliminando producto terminado');
                }
            }
        }

        async function eliminarMaquina(id) {
            if (confirm('¿Estás seguro de eliminar esta máquina?')) {
                try {
                    const response = await fetch(`/maquinas/${id}`, { method: 'DELETE' });
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error eliminando máquina');
                    }
                } catch (error) {
                    alert('Error eliminando máquina');
                }
            }
        }

        async function marcarTratamientoRealizado(clienteId) {
            if (confirm('¿Marcar tratamiento como realizado hoy?')) {
                try {
                    const response = await fetch('/clientes/marcar-tratamiento', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            clienteId: clienteId,
                            fechaTratamiento: new Date().toISOString().split('T')[0]
                        })
                    });
                    
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error marcando tratamiento');
                    }
                } catch (error) {
                    alert('Error marcando tratamiento');
                }
            }
        }

        async function reagendarTratamiento(clienteId) {
            const nuevaFecha = prompt('Ingresa la nueva fecha del tratamiento (YYYY-MM-DD):');
            if (nuevaFecha && nuevaFecha.match(/^\d{4}-\d{2}-\d{2}$/)) {
                try {
                    const response = await fetch('/clientes/reagendar-tratamiento', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            clienteId: clienteId,
                            fechaTratamiento: nuevaFecha
                        })
                    });
                    
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error reagendando tratamiento');
                    }
                } catch (error) {
                    alert('Error reagendando tratamiento');
                }
            } else {
                alert('Formato de fecha inválido. Usa YYYY-MM-DD');
            }
        }

        // Manejar formulario de máquinas
        document.getElementById('maquinaForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = {
                nombre: document.getElementById('nombreMaquina').value,
                marca: document.getElementById('marcaMaquina').value,
                modelo: document.getElementById('modeloMaquina').value,
                precio: parseFloat(document.getElementById('precioMaquina').value),
                fecha_compra: document.getElementById('fechaCompraMaquina').value,
                garantia_meses: document.getElementById('garantiaMaquina').value || null,
                estado: document.getElementById('estadoMaquina').value,
                observaciones: document.getElementById('observacionesMaquina').value
            };
            
            try {
                const response = await fetch('/maquinas', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });
                
                if (response.ok) {
                    location.reload();
                } else {
                    alert('Error agregando máquina');
                }
            } catch (error) {
                alert('Error agregando máquina');
            }
        });

        // Funciones para el presupuesto
        function calcularTotal() {
            let total = 0;
            
            // Servicios predefinidos
            document.querySelectorAll('#modalPresupuesto input[type="checkbox"]:checked').forEach(checkbox => {
                total += parseInt(checkbox.dataset.precio) || 0;
            });
            
            // Servicio personalizado
            const precioPersonalizado = parseInt(document.getElementById('precioPersonalizado').value) || 0;
            if (precioPersonalizado > 0) {
                total += precioPersonalizado;
            }
            
            // Aplicar descuento
            const descuento = parseInt(document.getElementById('descuento').value) || 0;
            total = total * (100 - descuento) / 100;
            
            document.getElementById('totalPresupuesto').textContent = total.toLocaleString();
            return total;
        }
        
        // Event listeners para calcular total automáticamente
        document.addEventListener('DOMContentLoaded', function() {
            const presupuestoInputs = document.querySelectorAll('#modalPresupuesto input[type="checkbox"], #precioPersonalizado, #descuento');
            presupuestoInputs.forEach(input => {
                input.addEventListener('change', calcularTotal);
                input.addEventListener('input', calcularTotal);
            });
        });

        // Generar PDF
        document.getElementById('generarPDF').addEventListener('click', async function() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();
            
            // Cargar configuración personalizada
            let config;
            try {
                const response = await fetch('/api/configuracion-pdf');
                config = await response.json();
            } catch (error) {
                console.error('Error cargando configuración:', error);
                // Usar configuración por defecto
                config = {
                    nombre_empresa: 'PPGarage - Car Detailing',
                    direccion_empresa: 'Tu Dirección, Ciudad',
                    telefono_empresa: '+54 11 1234-5678',
                    email_empresa: 'contacto@ppgarage.com',
                    encabezado_presupuesto: 'Presupuesto de Servicios de Car Detailing',
                    descripcion_empresa: 'Especialistas en cuidado automotriz.',
                    terminos_condiciones: '• El presupuesto tiene validez por los días indicados\n• Los precios incluyen materiales y mano de obra\n• Se requiere 50% de seña para iniciar el trabajo',
                    pie_pagina: 'Gracias por confiar en PPGarage',
                    validez_dias: 15
                };
            }
            
            // Datos del cliente
            const clienteNombre = document.getElementById('clienteNombre').value || 'Cliente';
            const clienteTelefono = document.getElementById('clienteTelefono').value || '';
            const clienteEmail = document.getElementById('clienteEmail').value || '';
            const vehiculo = document.getElementById('vehiculo').value || '';
            const validez = document.getElementById('validezPresupuesto').value || config.validez_dias;
            
            // Configuración de colores personalizados
            function hexToRgb(hex) {
                const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
                return result ? [
                    parseInt(result[1], 16),
                    parseInt(result[2], 16),
                    parseInt(result[3], 16)
                ] : [41, 128, 185]; // Color por defecto si hay error
            }
            
            const colorPrimario = hexToRgb(config.color_primario || '#2980b9');
            const colorSecundario = hexToRgb(config.color_secundario || '#34495e');
            
            // Calcular altura dinámica del encabezado basada en la descripción
            let alturaEncabezado = 45; // Altura mínima
            
            // Pre-calcular líneas de descripción para determinar altura necesaria
            doc.setFontSize(9); // Tamaño de fuente de la descripción
            const maxWidth = config.mostrar_logo && config.logo_url ? 90 : 115;
            const descripcionLineas = doc.splitTextToSize(config.descripcion_empresa, maxWidth);
            
            // Ajustar altura del encabezado según líneas de descripción
            if (descripcionLineas.length > 1) {
                alturaEncabezado = Math.max(45, 30 + (descripcionLineas.length * 4));
            }
            
            // Encabezado de la empresa con altura dinámica
            doc.setFillColor(...colorPrimario);
            doc.rect(0, 0, 210, alturaEncabezado, 'F');
            
            // Agregar logo si está configurado
            if (config.mostrar_logo && config.logo_url) {
                try {
                    // Intentar cargar el logo
                    const img = new Image();
                    img.crossOrigin = 'anonymous';
                    
                    await new Promise((resolve, reject) => {
                        img.onload = () => {
                            try {
                                // Agregar logo al PDF
                                doc.addImage(img, 'JPEG', 15, 8, 25, 25);
                                resolve();
                            } catch (error) {
                                console.warn('Error agregando logo al PDF:', error);
                                resolve(); // Continuar sin logo
                            }
                        };
                        img.onerror = () => {
                            console.warn('Error cargando logo desde:', config.logo_url);
                            resolve(); // Continuar sin logo
                        };
                        img.src = window.location.origin + config.logo_url;
                    });
                    
                    // Layout con logo - Lado izquierdo
                    doc.setTextColor(255, 255, 255);
                    doc.setFontSize(16);
                    doc.setFont('helvetica', 'bold');
                    doc.text(config.nombre_empresa, 45, 18);
                    
                    // Descripción con text wrap - respetando el límite derecho
                    doc.setFontSize(8);
                    doc.setFont('helvetica', 'normal');
                    doc.text(descripcionLineas, 45, 25);
                    
                } catch (error) {
                    console.warn('Error con el logo, usando diseño sin logo:', error);
                    // Usar diseño sin logo
                    doc.setTextColor(255, 255, 255);
                    doc.setFontSize(18);
                    doc.setFont('helvetica', 'bold');
                    doc.text(config.nombre_empresa, 20, 18);
                    
                    // Descripción con text wrap - sin logo
                    doc.setFontSize(9);
                    doc.setFont('helvetica', 'normal');
                    doc.text(descripcionLineas, 20, 26);
                }
            } else {
                // Diseño sin logo
                doc.setTextColor(255, 255, 255);
                doc.setFontSize(18);
                doc.setFont('helvetica', 'bold');
                doc.text(config.nombre_empresa, 20, 18);
                
                // Descripción con text wrap - sin logo
                doc.setFontSize(9);
                doc.setFont('helvetica', 'normal');
                doc.text(descripcionLineas, 20, 26);
            }
            
            // Información de contacto de la empresa - Lado derecho
            doc.setTextColor(255, 255, 255);
            doc.setFontSize(8);
            doc.setFont('helvetica', 'normal');
            doc.text(config.telefono_empresa, 145, 18);
            doc.text(config.email_empresa, 145, 24);
            doc.text(config.direccion_empresa, 145, 30);
            
            // Título del documento (posición dinámica)
            const yTitulo = alturaEncabezado + 15;
            doc.setTextColor(...colorPrimario);
            doc.setFontSize(18);
            doc.setFont('helvetica', 'bold');
            doc.text(config.encabezado_presupuesto, 20, yTitulo);
            
            // Información del presupuesto (posición dinámica)
            const yInfo = yTitulo + 10;
            doc.setTextColor(...colorSecundario);
            doc.setFontSize(10);
            doc.setFont('helvetica', 'normal');
            const fechaActual = new Date().toLocaleDateString();
            const fechaValidez = new Date(Date.now() + validez * 24 * 60 * 60 * 1000).toLocaleDateString();
            
            doc.text(`Fecha: ${fechaActual}`, 20, yInfo);
            doc.text(`Válido hasta: ${fechaValidez}`, 20, yInfo + 5);
            doc.text(`Presupuesto #: ${Date.now().toString().slice(-6)}`, 140, yInfo);
            
            // Datos del cliente (posición dinámica)
            const yCliente = yInfo + 15;
            doc.setFont('helvetica', 'bold');
            doc.text('DATOS DEL CLIENTE:', 20, yCliente);
            doc.setFont('helvetica', 'normal');
            doc.text(`Cliente: ${clienteNombre}`, 20, yCliente + 7);
            if (clienteTelefono) doc.text(`Teléfono: ${clienteTelefono}`, 20, yCliente + 12);
            if (clienteEmail) doc.text(`Email: ${clienteEmail}`, 20, yCliente + 17);
            if (vehiculo) doc.text(`Vehículo: ${vehiculo}`, 20, yCliente + 22);
            
            // Recopilar servicios seleccionados
            const servicios = [];
            let yPosition = yCliente + 30; // Posición dinámica para la tabla
            
            // Servicios predefinidos
            document.querySelectorAll('#modalPresupuesto input[type="checkbox"]:checked').forEach(checkbox => {
                const label = checkbox.nextElementSibling.textContent.trim();
                const precio = parseInt(checkbox.dataset.precio);
                servicios.push([label.split(' - ')[0], `$${precio.toLocaleString()}`]);
            });
            
            // Servicio personalizado
            const servicioPersonalizado = document.getElementById('servicioPersonalizado').value;
            const precioPersonalizado = parseInt(document.getElementById('precioPersonalizado').value) || 0;
            if (servicioPersonalizado && precioPersonalizado > 0) {
                servicios.push([servicioPersonalizado, `$${precioPersonalizado.toLocaleString()}`]);
            }
            
            // Tabla de servicios
            if (servicios.length > 0) {
                doc.autoTable({
                    startY: yPosition,
                    head: [['Servicio', 'Precio']],
                    body: servicios,
                    theme: 'striped',
                    headStyles: { 
                        fillColor: colorPrimario,
                        textColor: [255, 255, 255],
                        fontStyle: 'bold'
                    },
                    styles: {
                        fontSize: 10,
                        cellPadding: 5
                    },
                    columnStyles: {
                        0: { cellWidth: 120 },
                        1: { cellWidth: 50, halign: 'right' }
                    }
                });
                
                yPosition = doc.lastAutoTable.finalY + 10;
            }
            
            // Cálculos finales
            const subtotal = calcularTotal() / (100 - (parseInt(document.getElementById('descuento').value) || 0)) * 100;
            const descuento = parseInt(document.getElementById('descuento').value) || 0;
            const total = calcularTotal();
            
            // Totales
            doc.setFont('helvetica', 'bold');
            if (descuento > 0) {
                doc.text(`Subtotal: $${subtotal.toLocaleString()}`, 140, yPosition);
                doc.text(`Descuento (${descuento}%): -$${(subtotal - total).toLocaleString()}`, 140, yPosition + 7);
                yPosition += 14;
            }
            
            doc.setFontSize(12);
            doc.setTextColor(...colorPrimario);
            doc.text(`TOTAL: $${total.toLocaleString()}`, 140, yPosition);
            
            // Términos y condiciones personalizados
            yPosition += 20;
            doc.setFontSize(10);
            doc.setFont('helvetica', 'bold');
            doc.setTextColor(...colorSecundario);
            doc.text('TÉRMINOS Y CONDICIONES:', 20, yPosition);
            
            doc.setFont('helvetica', 'normal');
            doc.setFontSize(9);
            
            // Procesar términos y condiciones personalizados
            const terminosPersonalizados = config.terminos_condiciones.split('\n');
            terminosPersonalizados.forEach((termino, index) => {
                if (termino.trim()) {
                    doc.text(termino.trim(), 20, yPosition + 8 + (index * 5));
                }
            });
            
            // Pie de página personalizado
            const piePaginaY = Math.max(yPosition + 8 + (terminosPersonalizados.length * 5) + 10, 275);
            doc.setFontSize(8);
            doc.setTextColor(128, 128, 128);
            doc.text(config.pie_pagina, 20, piePaginaY);
            
            // Descargar PDF
            const nombreArchivo = `Presupuesto_${clienteNombre.replace(/\s+/g, '_')}_${fechaActual.replace(/\//g, '-')}.pdf`;
            doc.save(nombreArchivo);
            
            // Cerrar modal
            bootstrap.Modal.getInstance(document.getElementById('modalPresupuesto')).hide();
        });

        // Establecer fecha actual por defecto
        document.getElementById('fecha').valueAsDate = new Date();
        document.getElementById('fechaCompraMaquina').valueAsDate = new Date();

        // Gestión de precios de servicios
        let preciosServicios = {};
        
        // Cargar precios dinámicamente
        async function cargarPreciosServicios() {
            try {
                const response = await fetch('/api/precios-servicios');
                const precios = await response.json();
                
                preciosServicios = {};
                precios.forEach(servicio => {
                    preciosServicios[servicio.nombre_servicio] = {
                        precio: parseFloat(servicio.precio),
                        descripcion: servicio.descripcion
                    };
                });
                
                // Actualizar precios en el modal de presupuesto
                actualizarPreciosEnPresupuesto();
                
                // Generar servicios dinámicamente en el modal de presupuesto
                generarServiciosEnModal(precios);
            } catch (error) {
                console.error('Error cargando precios:', error);
            }
        }
        
        // Generar servicios dinámicamente en el modal de presupuesto
        function generarServiciosEnModal(servicios) {
            const container = document.getElementById('serviciosContainer');
            
            if (!container) return;
            
            container.innerHTML = '';
            
            servicios.forEach((servicio, index) => {
                const precio = parseFloat(servicio.precio);
                const nombreDisplay = servicio.nombre_servicio.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase());
                const servicioId = `servicio_${servicio.id}`;
                
                const servicioHTML = `
                    <div class="form-check">
                        <input class="form-check-input servicio-checkbox" type="checkbox" id="${servicioId}" data-precio="${precio}" data-servicio-id="${servicio.id}">
                        <label class="form-check-label" for="${servicioId}">
                            ${nombreDisplay} - $${precio.toLocaleString()}
                        </label>
                    </div>
                `;
                
                container.insertAdjacentHTML('beforeend', servicioHTML);
            });
            
            // Agregar event listeners a los nuevos checkboxes
            document.querySelectorAll('.servicio-checkbox').forEach(checkbox => {
                checkbox.addEventListener('change', calcularTotal);
            });
        }
        
        // Actualizar precios en el modal de presupuesto
        function actualizarPreciosEnPresupuesto() {
            const serviciosMap = {
                'lavadoBasico': 'lavado_basico',
                'lavadoCompleto': 'lavado_completo',
                'encerado': 'encerado',
                'sellado': 'sellado',
                'interior': 'limpieza_interior',
                'motor': 'limpieza_motor'
            };
            
            Object.keys(serviciosMap).forEach(checkboxId => {
                const checkbox = document.getElementById(checkboxId);
                const servicioKey = serviciosMap[checkboxId];
                
                if (checkbox && preciosServicios[servicioKey]) {
                    const precio = preciosServicios[servicioKey].precio;
                    checkbox.dataset.precio = precio;
                    
                    // Actualizar el texto del label
                    const label = checkbox.nextElementSibling;
                    if (label) {
                        const servicioNombre = label.textContent.split(' - ')[0];
                        label.textContent = `${servicioNombre} - $${precio.toLocaleString()}`;
                    }
                }
            });
        }
        
        // Event listeners para configuración de precios
        document.addEventListener('DOMContentLoaded', function() {
            // Cargar precios al inicio
            cargarPreciosServicios();
            
            // Cargar servicios cuando se abra el modal de presupuesto
            const modalPresupuesto = document.getElementById('modalPresupuesto');
            if (modalPresupuesto) {
                modalPresupuesto.addEventListener('show.bs.modal', function() {
                    cargarPreciosServicios();
                });
            }
            
            // Detectar cambios en inputs de precio
            document.querySelectorAll('.precio-input').forEach(input => {
                input.addEventListener('input', function() {
                    const precioOriginal = parseFloat(this.dataset.precioOriginal);
                    const precioNuevo = parseFloat(this.value);
                    const servicioId = this.closest('tr').dataset.servicioId;
                    
                    const botonGuardar = document.querySelector(`.guardar-precio[data-servicio-id="${servicioId}"]`);
                    const botonCancelar = document.querySelector(`.cancelar-precio[data-servicio-id="${servicioId}"]`);
                    
                    if (precioNuevo !== precioOriginal) {
                        botonGuardar.style.display = 'inline-block';
                        botonCancelar.style.display = 'inline-block';
                    } else {
                        botonGuardar.style.display = 'none';
                        botonCancelar.style.display = 'none';
                    }
                });
            });
            
            // Guardar precio
            document.querySelectorAll('.guardar-precio').forEach(button => {
                button.addEventListener('click', async function() {
                    const servicioId = this.dataset.servicioId;
                    const input = this.closest('tr').querySelector('.precio-input');
                    const nuevoPrecio = parseFloat(input.value);
                    
                    try {
                        const response = await fetch('/actualizar-precio', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ servicioId, nuevoPrecio })
                        });
                        
                        if (response.ok) {
                            input.dataset.precioOriginal = nuevoPrecio;
                            this.style.display = 'none';
                            this.nextElementSibling.style.display = 'none';
                            
                            // Actualizar badge de precio actual
                            const badge = this.closest('tr').querySelector('.badge');
                            badge.textContent = `$${nuevoPrecio.toLocaleString()}`;
                            
                            // Recargar precios para presupuesto
                            await cargarPreciosServicios();
                            
                            alert('Precio actualizado correctamente');
                        } else {
                            alert('Error actualizando precio');
                        }
                    } catch (error) {
                        alert('Error actualizando precio');
                    }
                });
            });
            
            // Cancelar cambio de precio
            document.querySelectorAll('.cancelar-precio').forEach(button => {
                button.addEventListener('click', function() {
                    const servicioId = this.dataset.servicioId;
                    const input = this.closest('tr').querySelector('.precio-input');
                    const precioOriginal = parseFloat(input.dataset.precioOriginal);
                    
                    input.value = precioOriginal;
                    this.style.display = 'none';
                    this.previousElementSibling.style.display = 'none';
                });
            });
            
            // Agregar nuevo servicio
            document.getElementById('guardarNuevoServicio').addEventListener('click', async function() {
                const nombre = document.getElementById('nombreServicio').value;
                const precio = parseFloat(document.getElementById('precioServicio').value);
                const descripcion = document.getElementById('descripcionServicio').value;
                
                if (!nombre || !precio) {
                    alert('Por favor completa el nombre y precio del servicio');
                    return;
                }
                
                try {
                    const response = await fetch('/agregar-servicio', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ nombre, precio, descripcion })
                    });
                    
                    if (response.ok) {
                        alert('Servicio agregado correctamente');
                        location.reload();
                    } else {
                        alert('Error agregando servicio');
                    }
                } catch (error) {
                    alert('Error agregando servicio');
                }
            });
            
            // Eliminar servicio
            document.querySelectorAll('.eliminar-servicio').forEach(button => {
                button.addEventListener('click', async function() {
                    const servicioId = this.dataset.servicioId;
                    const servicioNombre = this.closest('tr').querySelector('td:first-child strong').textContent;
                    
                    if (confirm(`¿Estás seguro de eliminar el servicio "${servicioNombre}"?\n\nEsta acción no se puede deshacer y el servicio no estará disponible en futuros presupuestos.`)) {
                        try {
                            const response = await fetch(`/eliminar-servicio/${servicioId}`, {
                                method: 'DELETE'
                            });
                            
                            if (response.ok) {
                                const result = await response.json();
                                alert(result.message || 'Servicio eliminado correctamente');
                                
                                // Remover la fila de la tabla
                                this.closest('tr').remove();
                                
                                // Recargar precios para presupuesto
                                await cargarPreciosServicios();
                            } else {
                                const error = await response.json();
                                alert(error.error || 'Error eliminando servicio');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            alert('Error eliminando servicio');
                        }
                    }
                });
            });
            
            // Editar servicio completo
            document.querySelectorAll('.editar-servicio').forEach(button => {
                button.addEventListener('click', function() {
                    const servicioId = this.dataset.servicioId;
                    const fila = this.closest('tr');
                    
                    // Obtener datos actuales del servicio
                    const nombreActual = fila.querySelector('td:first-child strong').textContent.trim();
                    const descripcionActual = fila.querySelector('td:nth-child(2)').textContent.trim();
                    const precioActual = fila.querySelector('.precio-input').value;
                    
                    // Cargar datos en el modal
                    document.getElementById('editarServicioId').value = servicioId;
                    document.getElementById('editarNombreServicio').value = nombreActual;
                    document.getElementById('editarPrecioServicio').value = precioActual;
                    document.getElementById('editarDescripcionServicio').value = descripcionActual === 'Sin descripción' ? '' : descripcionActual;
                });
            });
            
            // Guardar edición de servicio
            document.getElementById('guardarEdicionServicio').addEventListener('click', async function() {
                const servicioId = document.getElementById('editarServicioId').value;
                const nombre = document.getElementById('editarNombreServicio').value.trim();
                const precio = parseFloat(document.getElementById('editarPrecioServicio').value);
                const descripcion = document.getElementById('editarDescripcionServicio').value.trim();
                
                if (!nombre || !precio) {
                    alert('Por favor completa el nombre y precio del servicio');
                    return;
                }
                
                try {
                    const response = await fetch(`/editar-servicio/${servicioId}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ nombre, precio, descripcion })
                    });
                    
                    if (response.ok) {
                        const result = await response.json();
                        alert(result.message || 'Servicio actualizado correctamente');
                        
                        // Cerrar modal
                        bootstrap.Modal.getInstance(document.getElementById('modalEditarServicio')).hide();
                        
                        // Recargar página para mostrar cambios
                        location.reload();
                    } else {
                        const error = await response.json();
                        alert(error.error || 'Error actualizando servicio');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error actualizando servicio');
                }
            });
            
            // =================== CONFIGURACIÓN PDF ===================
            
            // Cargar configuración PDF actual
            async function cargarConfiguracionPDF() {
                try {
                    const response = await fetch('/api/configuracion-pdf');
                    const config = await response.json();
                    
                    // Llenar los campos del formulario
                    document.getElementById('nombreEmpresa').value = config.nombre_empresa || '';
                    document.getElementById('direccionEmpresa').value = config.direccion_empresa || '';
                    document.getElementById('telefonoEmpresa').value = config.telefono_empresa || '';
                    document.getElementById('emailEmpresa').value = config.email_empresa || '';
                    document.getElementById('encabezadoPresupuesto').value = config.encabezado_presupuesto || '';
                    document.getElementById('descripcionEmpresa').value = config.descripcion_empresa || '';
                    document.getElementById('terminosCondiciones').value = config.terminos_condiciones || '';
                    document.getElementById('piePagina').value = config.pie_pagina || '';
                    document.getElementById('validezDias').value = config.validez_dias || 15;
                    
                    // Campos de personalización visual
                    document.getElementById('colorPrimario').value = config.color_primario || '#2980b9';
                    document.getElementById('colorPrimarioText').value = config.color_primario || '#2980b9';
                    document.getElementById('colorSecundario').value = config.color_secundario || '#34495e';
                    document.getElementById('colorSecundarioText').value = config.color_secundario || '#34495e';
                    document.getElementById('mostrarLogo').checked = config.mostrar_logo || false;
                    
                    // Mostrar logo actual si existe
                    if (config.logo_url) {
                        document.getElementById('logoImg').src = config.logo_url;
                        document.getElementById('logoPreview').style.display = 'block';
                    } else {
                        document.getElementById('logoPreview').style.display = 'none';
                    }
                    
                    // Actualizar vista previa de colores
                    document.getElementById('previewPrimario').style.backgroundColor = config.color_primario || '#2980b9';
                    document.getElementById('previewSecundario').style.backgroundColor = config.color_secundario || '#34495e';
                    
                } catch (error) {
                    console.error('Error cargando configuración PDF:', error);
                }
            }
            
            // Guardar configuración PDF
            document.getElementById('formConfiguracionPDF').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const configuracion = {
                    nombre_empresa: document.getElementById('nombreEmpresa').value,
                    direccion_empresa: document.getElementById('direccionEmpresa').value,
                    telefono_empresa: document.getElementById('telefonoEmpresa').value,
                    email_empresa: document.getElementById('emailEmpresa').value,
                    encabezado_presupuesto: document.getElementById('encabezadoPresupuesto').value,
                    descripcion_empresa: document.getElementById('descripcionEmpresa').value,
                    terminos_condiciones: document.getElementById('terminosCondiciones').value,
                    pie_pagina: document.getElementById('piePagina').value,
                    validez_dias: parseInt(document.getElementById('validezDias').value),
                    color_primario: document.getElementById('colorPrimario').value,
                    color_secundario: document.getElementById('colorSecundario').value,
                    logo_url: document.getElementById('logoImg').src ? document.getElementById('logoImg').src.split(window.location.origin)[1] || null : null,
                    mostrar_logo: document.getElementById('mostrarLogo').checked
                };
                
                try {
                    const response = await fetch('/api/configuracion-pdf', {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(configuracion)
                    });
                    
                    if (response.ok) {
                        alert('Configuración guardada correctamente');
                    } else {
                        const error = await response.json();
                        alert(error.error || 'Error guardando configuración');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error guardando configuración');
                }
            });
            
            // Cargar configuración al cambiar a la pestaña de configuración
            document.querySelector('button[data-bs-target="#configuracion"]').addEventListener('click', function() {
                cargarConfiguracionPDF();
            });
            
            // Vista previa de configuración PDF
            document.getElementById('btnVistaPrevia').addEventListener('click', function() {
                const configuracion = {
                    nombre_empresa: document.getElementById('nombreEmpresa').value || 'PPGarage - Car Detailing',
                    direccion_empresa: document.getElementById('direccionEmpresa').value || 'Tu Dirección, Ciudad',
                    telefono_empresa: document.getElementById('telefonoEmpresa').value || '+54 11 1234-5678',
                    email_empresa: document.getElementById('emailEmpresa').value || 'contacto@ppgarage.com',
                    encabezado_presupuesto: document.getElementById('encabezadoPresupuesto').value || 'Presupuesto de Servicios',
                    descripcion_empresa: document.getElementById('descripcionEmpresa').value || 'Especialistas en cuidado automotriz',
                    terminos_condiciones: document.getElementById('terminosCondiciones').value || 'Términos y condiciones por defecto',
                    pie_pagina: document.getElementById('piePagina').value || 'Gracias por confiar en nosotros',
                    validez_dias: parseInt(document.getElementById('validezDias').value) || 15
                };
                
                let preview = `
                <div class="alert alert-info">
                    <h5><i class="bi bi-info-circle"></i> Vista Previa de tu PDF</h5>
                    <hr>
                    <h6><strong>Encabezado:</strong></h6>
                    <p><strong>${configuracion.nombre_empresa}</strong><br>
                    ${configuracion.descripcion_empresa}<br>
                    ${configuracion.telefono_empresa} | ${configuracion.email_empresa}<br>
                    ${configuracion.direccion_empresa}</p>
                    
                    <h6><strong>Título:</strong></h6>
                    <p>${configuracion.encabezado_presupuesto}</p>
                    
                    <h6><strong>Términos y Condiciones:</strong></h6>
                    <p style="white-space: pre-line;">${configuracion.terminos_condiciones}</p>
                    
                    <h6><strong>Pie de Página:</strong></h6>
                    <p>${configuracion.pie_pagina}</p>
                    
                    <p><small><strong>Validez por defecto:</strong> ${configuracion.validez_dias} días</small></p>
                </div>
                `;
                
                // Mostrar en un modal o alert
                const modalHTML = `
                    <div class="modal fade" id="modalVistaPrevia" tabindex="-1">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Vista Previa - Configuración PDF</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    ${preview}
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                
                // Remover modal anterior si existe
                const modalAnterior = document.getElementById('modalVistaPrevia');
                if (modalAnterior) {
                    modalAnterior.remove();
                }
                
                // Agregar modal al DOM
                document.body.insertAdjacentHTML('beforeend', modalHTML);
                
                // Mostrar modal
                const modal = new bootstrap.Modal(document.getElementById('modalVistaPrevia'));
                modal.show();
            });
            
            // Event listeners para sincronizar color pickers
            document.getElementById('colorPrimario').addEventListener('input', function() {
                document.getElementById('colorPrimarioText').value = this.value;
                document.getElementById('previewPrimario').style.backgroundColor = this.value;
            });
            
            document.getElementById('colorPrimarioText').addEventListener('input', function() {
                if (/^#[0-9A-F]{6}$/i.test(this.value)) {
                    document.getElementById('colorPrimario').value = this.value;
                    document.getElementById('previewPrimario').style.backgroundColor = this.value;
                }
            });
            
            document.getElementById('colorSecundario').addEventListener('input', function() {
                document.getElementById('colorSecundarioText').value = this.value;
                document.getElementById('previewSecundario').style.backgroundColor = this.value;
            });
            
            document.getElementById('colorSecundarioText').addEventListener('input', function() {
                if (/^#[0-9A-F]{6}$/i.test(this.value)) {
                    document.getElementById('colorSecundario').value = this.value;
                    document.getElementById('previewSecundario').style.backgroundColor = this.value;
                }
            });
            
            // =================== UPLOAD DE LOGO ===================
            
            // Subir logo
            document.getElementById('btnSubirLogo').addEventListener('click', async function() {
                const fileInput = document.getElementById('logoFile');
                const file = fileInput.files[0];
                
                if (!file) {
                    alert('Por favor selecciona una imagen primero');
                    return;
                }
                
                // Validar tipo de archivo
                if (!file.type.startsWith('image/')) {
                    alert('Solo se permiten archivos de imagen');
                    return;
                }
                
                // Validar tamaño (5MB máximo)
                if (file.size > 5 * 1024 * 1024) {
                    alert('El archivo es muy grande. Tamaño máximo: 5MB');
                    return;
                }
                
                const formData = new FormData();
                formData.append('logo', file);
                
                try {
                    this.innerHTML = '<i class="bi bi-hourglass-split"></i> Subiendo...';
                    this.disabled = true;
                    
                    const response = await fetch('/api/upload-logo', {
                        method: 'POST',
                        body: formData
                    });
                    
                    if (response.ok) {
                        const result = await response.json();
                        
                        // Mostrar preview del logo
                        document.getElementById('logoImg').src = result.logoUrl;
                        document.getElementById('logoPreview').style.display = 'block';
                        document.getElementById('mostrarLogo').checked = true;
                        
                        // Limpiar input
                        fileInput.value = '';
                        
                        alert('Logo subido correctamente');
                    } else {
                        const error = await response.json();
                        alert(error.error || 'Error subiendo logo');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error subiendo logo');
                } finally {
                    this.innerHTML = '<i class="bi bi-cloud-upload"></i> Subir';
                    this.disabled = false;
                }
            });
            
            // Eliminar logo
            document.getElementById('btnEliminarLogo').addEventListener('click', async function() {
                if (!confirm('¿Estás seguro de eliminar el logo actual?')) {
                    return;
                }
                
                try {
                    const response = await fetch('/api/delete-logo', {
                        method: 'DELETE'
                    });
                    
                    if (response.ok) {
                        // Ocultar preview
                        document.getElementById('logoPreview').style.display = 'none';
                        document.getElementById('logoImg').src = '';
                        document.getElementById('mostrarLogo').checked = false;
                        
                        alert('Logo eliminado correctamente');
                    } else {
                        const error = await response.json();
                        alert(error.error || 'Error eliminando logo');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error eliminando logo');
                }
            });
            
            // Cargar configuración al inicio si estamos en la pestaña de configuración
            if (window.location.hash === '#configuracion') {
                cargarConfiguracionPDF();
            }
        });
    </script>
</body>
</html>